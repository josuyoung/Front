자바스크립트

최초의 브라우저 -> 넷스케이프 -> 넷스케이프(브랜던 아이크, 모카 -> 라이브스크립트 -> 자바스크립트)
  (모자이크)

- 소스코드를 복원한 익스플로러(90% ~ jscript)
- jQuery(버전, 브라우저 표준화 라이브러리)

- 크롬(v8)
- 표준화 -> ECMA Script1 ~ 5(현재 브라우저가 표준화하여 적용) -> ECMA Script6 ~ (브라우저 컴파일)


자바스크립트의 특징
- 웹 브라우저에 자바스크립트 엔진이 내장되어 있기 때문에 사용이 가능
- 웹의 동적 구현을 하기 위한 언어
- 대소문자를 구별
- 객체 기반의 스크립트 언어
- HTML문서 내에서 <script> ~ </script> 태그 안에 작성
- 웹 브라우저에서 동작, 운영체제에서도 동작(node.js)

자바스크립트의 출력
1. 문서 출력
    document.write() 함수를 통해 <body>에 출력

2. 콘솔 출력
    console.log() 함수를 통해 브라우저 콘솔에 출력

자바스크립트의 주석
한줄 주석 : //
여러줄 주석 : /* */

외부 자바스크립트 사용
<script src="자바스크립트 파일경로"></script>

🎁 추가 익스텐션
- JavaScript (ES6) code snippets
- Code Spell Checker
- Bracket Pair Colorizer
- material icon theme
- material theme
- prettier

프로그래밍 
- 컴퓨터의 프로그램을 작성하는 일. 일반적으로는 프로그램의 작성 방법의 결정, 코딩(coding), 에러 수정 등의 작업 모두를 가리키지만 코딩만을 가리킬 때도 있음.


변수(Variable)

CPU : 뇌(연산, 제어)
RAM(메모리) : 임시기억
HDD(하드디스트, USB..) : 영구기억

- 데이터를 저장할 수 있는 메모리 공간


let 변수명;     // 변수를 선언
let num;

변수명 = 값;    // 변수의 초기화
num = 10;

let 변수명 = 값 // 변수의 선언 및 초기화
let num = 10;


✔ var를 사용하지 않는 이유
- 같은 이름의 변수를 선언할 수 있음
- 지역변수와 전역변수의 구별이 모호

✔ babel
- 트렌스 컴파일러

✔ use strict
- strict mode를 사용한다는 의미
- 코드를 엄격하게 사용하도록 함
예)
    <script>
    'use strict'
    ...
    </script>


상수(constant)
- 한번 선언된 상수는 다시 재정의 할 수 없으며, 값도 재할당 할 수 없음

let num;
num = 10;

let num = 10;
num = 5;

const num = 10;
num = 5; // 에러!

const num;
num = 10;   // 에러!










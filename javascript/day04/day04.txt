for문
- while문과 달리 자체적으로 초기값, 조건식, 증감식을 모두 포함하고있는 반복문
- while문보다 가독성이 좋고 간결하게 반복을 표현할 수 있다

    for(초기값,;조건식;증감식;){
        조건식의 결과가 true인 동안 반복할 반복문;
        ...
    }


    let i = 1;
    while(i <=5){
        console.log(`${i}번쨰 반복);
        i++
    }

    for(let i=1; i<=5;i++){

    }

문재. 1부터 100까지의 짝수의 합을 구하는 프로그램을 작성

continue문
- 반복중인 문장 내에서 사용하며 해당 문장의 나머지 부분을 건너뛰고 다음 조건식의 판단으로 넘어가게 함

    while(조건문){
        문장;
        ...
        if(조건문) continue;
        ...
    }

break문
- 반복중인 문장 내에서 사용하며 해당 반복문을 완전히 종료시키고 반복문 다음에 위치한 실행문으로 이동

    while(조건식){
        반복중인 문장
        ...
            if(조건식) break;
        ...

    }

중첩 반복문
- 반복문이 2개이상 겹쳐있는 문장
        while(조건문){
            ...
            while(조건문){
                ...
            }
        }



        for(초기값;조건문;증감식){
            ...
            for(초기값;조건문;증감식){
                ...
            }
        }

배열(array)
- 자료구조 중 하나
- 이름과 인덱스로 참조되는 정렬된 값의 집합
- 배열에서의 위치를 가르키는 숫자는 인덱스

배열을 만드는 방법

방법 1
    let 배열명;
    배열명 = [요소1, 요소2, 요소3,...]

    let arr;
    arr = [100, 80, 40, 10, 30, ...]

    arr[0] = 100;
    arr[1] = 80;
    arr[3] = 40;
    arr[4] = 10;
    arr[5] = 30;
방법 2
    let 배열명 = new Array(요소1, 요소2, 요소3 ...);
    
    let arr = new Array('김사과', '바나나', '오렌지', '  이메론');

    arr[0] = '김사과'
    arr[1] = '바나나'
    arr[2] = '오렌지'

✔ 자바스크립트 배열의 특징
    - 배열 요소의 타입이 고정되어 있지 않음

        let arr = [1,1.5,true,'김사과']

    - 배열 요소의 인덱스가 연속적이지 않아도 됨

        let arr = [];
        arr[0] = 10;
        arr[3] = 15;
    
        // Length property : 배열요소의 개수를 저장
        console.log(arr.length);
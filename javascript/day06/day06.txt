객체지향 프로그래밍
객체 지향 프로그래밍은 컴퓨터 프로그래밍의 패러다임 중 하나이다. 객체지향 프로그래밍은 컴퓨터 프로그램을 명령어의 목록으로 보는 시각에서 벗어나 여러 개의 독립된 단위 , 즉 "객체"들의 모임으로 파악하고자 하는 것이다.
각각의 객체는 메시지를 주고받고, 데이터를 처리할 수 있다.

절차지향 프로그래밍절차적 프로그래밍은 절차지향 프로그래밍 혹은 절차지향적 프로그래밍이라고도 불리는 프로그래밍 패러다임의 일종으로서, 때때로 명령형 프로그래밍과 동의어로 쓰이기도 하지만, 프로시저 호풀의 개념을 바탕으로 하고 있는 프로그래밍 패러다임을 의미하기도 한다. 프로시저는 루틴, 하위프로그램, 서브루틴, 메서드, 함수라고도 하는데 간단히 말해서 수행되어야 할 연속적인 계산과정을 포함하고 있다.
프로그램의 아무 위치에서나 프로시저를 호출할 수 있는데, 다른 프로시저에서도 호출 가능하고 심지어는 자기 자신에서도 호출 가능하다.

객체(Object)
- "실생활에서 인식할 수 있는 사물들을 객체라고 부른다."
- 명사, 동사

명사 : 추상적인 대상의 이름이나 구체적인대상

동사 : 사람 사물의 움직임을 나타낸다.

const dog = {
    name: "루시",   //property
    age : 11,
    colot: "white",
    weight : 3.5,
    family : "포메",
    play : function(){  //property (method)라고도 불림
        console.log("신난게 제끼기");
    }
    sleep : function(){
        console.log("자보리기");
    }
}

✔property
- 객체내의 변수또는 함수를 의미힌다.
- 변수 : property , 함수 : property method

객체의 접근방법
- 객체.프로퍼티
    dog.age -> 11 또는 dog['age'] = 11
    dog.age = 10; 또는 dog['age'] = 10;

객체를 만드는 방법
1. 리터럴 표기법
- 가장 간단한 방법
- const 객체명 = {}//빈 객체


2. 생성자를 이용한 객체 생성
- new 연산자를 사용하여 객체를 생성하고 초기화할 수 있음.
- 생성자는 메소드이며, 이 메소드는 새롭게 생성되는 객체를 초기화하는 역할을 함

    function 생성자명(매개변수, 매개변수2, ...){
        프로퍼티명 = 값;
        ...
    }
    const 객체명1 = new 생성자명(값1,값2...);
    const 객체명2 = new 생성자명(값1,값2...);

3. 클래스를 이용한 객체 생성
    클래스(class)
    - 객체를 만드는 설게도

    const 클래스명 = class{
        constructor(매개변수1,매개변수2..){
            프로퍼티명 = 값;
            ...
        }
        메소드명(매개변수1,매개변수2..){

        }

    }
    const 객체명 = new 클래스명(값1,값2..);

프로토타입(prototype)
- 자바스크립트의 모든 객체는 프로토타입이라는 객체를 포함한다.
- 모든 객체는 프로토타입으로부터 프로퍼티와 메소드를 상속
✔ 자바스크립트의 모든 객체는 하나이상의 다른 객체로부터 상속을 받으며, 상속되는 정보를 제공하는 객체를 프로토타입이라고 부른다.
✔ 자바스크립트에 내장된 모든 생성자나 사용자 정의 생성자는 object.prototype과 자신의 생성자 객체를 프로토타입을 가짐

    const Rucy = new Dog(); // Dog.prototype

    Rucy <-------------------- object.prototype
    Rucy <-------------------- Dog.prototype  두가지를 무조건 상속받게돼있다.

내장객체

Math 객체
- 수학에서 자주 사용하는 상수와 함수들을 미리 구현해 놓은 자바스크립트 내장 객체
min()   : 최소값,if 매개변수 x -> 인피니티 반환 문자같은 비교할수없는 것이 있으면 Nan반환
max()   : 최대값    같음 -인피티니만 차이
round() : 소수점 첫번째 자리에서 반올림하여 반환
floor() : 소수점 첫번재 자리에서 내림
ceil()  : 소수점 첫번째 자리에서 올림
random  : 0보다 크거나 같고 1보다 작은 무작위 소수를 반환

과제.
1. 주사위 게임
    - 랜던함 수를 뽑아 변수에 저장
    - prompt로 입력한 수와 일치하면 게임이 종료(틀리면 무한 반복)
    
    출력
    주사위 숫자를 맞춰보세요(1~6) : 3
    정답은 4 틀렸습니다.
    주사위 숫자를 맞춰보세요(1~6) : 5
    정답은 5 입니다 맞췄습니다.
2. 로또번호 예측 프로그램
    - 1 ~ 45까지의 랜덤한 수를 총 6개 추출
    - 같은 수가 중복되어 있으면 안됨
    - 오름차순 정렬

    출력
    오늘의 예측 로또번호

String 객체
- 문자열을 쉽게 만들고 다룰 수 있게 함
- length    : 문자열의 길이를 저장
- indexOf() : 매개변수로 전달된 문자열이 처음 등장하는 위치를 반환
- charAt()  : 매개변수로 전달된 인덱스에 위치한 문자를 반환
- includes(): 매개변수로 전달된 문자열이 포함되어 있는지 여부를 반환
- substring(): 매개변수로 전달된 시작 인덱스부터 종료인덱스 바로 앞까지 문자열을 추출하여 반환
- substr()  : 매개변수로 전달된 시작 인덱스부터 전달된 개수만큼 문자열을 추출하여 반환
- split()   : 매개변수로 전달된 구분자를 기준으로 문자열을 나눈 후 하나의 배열에 저장
- replace() : 원본 문자열을 매개변수로 전달된 문자열로 치환
- trim()    : 문자열의 앞뒤 공백을 제거
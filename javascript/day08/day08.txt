노드 추가
appendChild() : 새로운 노드를 해당 노드의 자식 노드 리스트 맨 마지막에 추가
insertBefore() : 새로운 노트를 특정 자식 노드 바로 앞에 추가
insertDate() : 새로운 노드를 텍스트 데이터에 새로운 텍스트로 추가

노드 생성
createElement() : 새로운 요소 노드를 만듦
createAttribute() : 새로운 속성 노드를 만듦
createTextNode() : 새로운 텍스트 노드를 만듦

노드 제거
removeChile();
- 자식 노드 리스트에서 특정 자식 노드를 제거
- 성공적으로 노드가 제거되면 노드를 반환
- 노드가 제거 될 때에는 제거되는 노드의 모든 자식들도 다같이 제거됨

노드 복제
cloneNode() : 기존의 존재하는 노드와 동일한 새로운 노드를 생성하고 반환
cloneNode(true)
        ---
        true: 복제되는 노드의 모든 속섣과 자식노드도 같이 복제
        false: 속성 노드만 복제하고 자식 노드를 복제하지 않음

폼 객체

    <form name = "myform" id = "regform">
        <input type="text" name = "userid" id = "id">
    </form>
    
    폼은 서버에 보내기 위해 씌우는 것 name은 폼의 이름 id 폼의 id 같게해도 되지만 통상 다르게 함

폼의 접근
const frm = document.myform; (name)
const frm = document.getElementById('regform') (id)
            둘다 통으로 객체를 저장함

아이디 value 접근
const id = document.myform.userid.value;  (name)
const id = frm.userid.value; (name) //객체를 만들엇다는 가정하에
const id = frm.elements[0].value; // [0] :<input type="text" name = "userid" id = "id">
const id = frm.elements['userid'].value;
const id = document.getElementById('id').value;

정규표현식
- https://developer.mozilla.org/ko/docs/Web/JavaScript/Guide/Regular_Expressions

- 문자열에 특정 문자 조합과 대응시키기 위해 사용되는 패턴

text()
- 정규표현식에 대입한 문자열이 부합하면 true, 아니면 false를 반환

    정규표현식객체.text('비교할 문자열') -> true or false

다음 우편번호 api

이벤트(Event)
- 웹 브라우저가 알려주는 HTML 요소에 대한 사건의 발생을 의미
- 웹 페이지에 사용된 자바스크립트는 발생한 이벤트에 반응하여 특정 동작을 수행
- 자바스크립트는 비동식 이벤트 중심 프로그래밍 모델이라고 함
https://developer.mozilla.org/ko/docs/Web/Events

자바스크립트는 mdn에서 공부

이벤트 타입(Event Type)
- 발생한 이벤트의 종류
- 이벤트명이라고도 함
- 가장 많이 사용하는 키보드, 마우스, HTML, DOM, window객체등을 처리하는 이벤트가 많이 제공
ex. : onClick, onKeypress, onLoad ,,,

이벤트 타겟(Event Target)
- 이벤트가 일어날 객체

이벤트 리스너(Event Listener)
- 이벤트가 발생했을 때 그 처리를 담당하는 함수
- 이벤트 핸들러라고도 함
- 지정된 타입의 이벤트가 특정 요소에서 발생하면 웹 브라우저는 그 요소에 등록된 이벤트 리스너를 실행

        <input type = "button" onClick = "sendit()" value = "가입완료">
                      -------- ---------  ---------
                    이벤트 타겟 이벤트 타입 이벤트 리스너
        const btn = document.getElementById('testBtn');
        btn.addEventListener('click', clickBtn);
        ---                  -------  ---------
        이벤트타겟            이벤트명  이벤트리스너

이벤트 객체(Event Object)
- 특정 타입의 이벤트와 관련이 있는 객체
- 해당 타입의 이벤트에 대한 상세 정보를 저장
- 모든 이벤트 객체는 이벤트의 타입을 나타내는 type 프러퍼티와 이벤트 대상을 나타내는 Target 프로퍼티를 가짐 
- 이벤트 객체는 이벤트 리스너가 호출될 때 인수로 전달

    <input type = "button" onclick = "sendit()" value = "확인">

    const sendit = function(e){
        console.log(e.type)
    }